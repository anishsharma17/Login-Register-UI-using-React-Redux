{"ast":null,"code":"const BASE_URL = 'http://localhost:3000';\nconst USERS_URL = BASE_URL + '/users'; //Redux Action \n\nconst setUserAction = userObj => ({\n  type: 'SET_USER',\n  payload: userObj\n});\n\nconst clearUserAction = () => ({\n  type: 'CLEAR_USER'\n}); //Fetch\n\n\nconst newUserToDB = userObj => dispatch => {\n  const config = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'appliaction/json'\n    },\n    body: JSON.stringify(userObj)\n  };\n  fetch(USERS_URL, config).then(r => r.json()).then(data => {\n    dispatch(setUserAction(data.user));\n    localStorage.setItem('token', data.token);\n  });\n};","map":{"version":3,"sources":["/home/anish/Documents/reduxDemo/rr-auth-frontend/src/redux/action.js"],"names":["BASE_URL","USERS_URL","setUserAction","userObj","type","payload","clearUserAction","newUserToDB","dispatch","config","method","headers","body","JSON","stringify","fetch","then","r","json","data","user","localStorage","setItem","token"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,uBAAjB;AACA,MAAMC,SAAS,GAAGD,QAAQ,GAAG,QAA7B,C,CAEA;;AACA,MAAME,aAAa,GAAGC,OAAO,KAAI;AAC7BC,EAAAA,IAAI,EAAE,UADuB;AAE7BC,EAAAA,OAAO,EAACF;AAFqB,CAAJ,CAA7B;;AAIA,MAAMG,eAAe,GAAE,OAAK;AAC1BF,EAAAA,IAAI,EAAC;AADqB,CAAL,CAAvB,C,CAIA;;;AACA,MAAMG,WAAW,GAAGJ,OAAO,IAAGK,QAAQ,IAAG;AACrC,QAAMC,MAAM,GAAG;AACXC,IAAAA,MAAM,EAAE,MADG;AAEXC,IAAAA,OAAO,EAAC;AACJ,sBAAgB;AADZ,KAFG;AAKXC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,OAAf;AALK,GAAf;AAQAY,EAAAA,KAAK,CAACd,SAAD,EAAWQ,MAAX,CAAL,CACCO,IADD,CACMC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADX,EAECF,IAFD,CAEMG,IAAI,IAAG;AACTX,IAAAA,QAAQ,CAACN,aAAa,CAACiB,IAAI,CAACC,IAAN,CAAd,CAAR;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA6BH,IAAI,CAACI,KAAlC;AACH,GALD;AAMH,CAfD","sourcesContent":["const BASE_URL = 'http://localhost:3000';\nconst USERS_URL = BASE_URL + '/users';\n\n//Redux Action \nconst setUserAction = userObj =>({\n    type: 'SET_USER',\n    payload:userObj\n});\nconst clearUserAction= ()=>({\n  type:'CLEAR_USER'\n});\n\n//Fetch\nconst newUserToDB = userObj =>dispatch =>{\n    const config = {\n        method :'POST',\n        headers:{\n            'Content-Type': 'appliaction/json'\n        },\n        body: JSON.stringify(userObj)\n\n    };\n    fetch(USERS_URL,config)\n    .then(r => r.json ())\n    .then(data =>{\n        dispatch(setUserAction(data.user));\n        localStorage.setItem('token',data.token);\n    });\n};"]},"metadata":{},"sourceType":"module"}