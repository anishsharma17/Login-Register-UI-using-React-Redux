{"ast":null,"code":"var _jsxFileName = \"/home/anish/Documents/reduxDemo/rr-auth-frontend/src/Pages/login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, connect } from 'react-redux';\nimport userActions from '../redux/action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginPage = props => {\n  _s();\n\n  // initializing dispatch\n  const dispatch = useDispatch(); // Setting up local state using the useState hook\n\n  const [loginForm, setLoginForm] = useState({\n    username: '',\n    password: ''\n  });\n  useEffect(() => {\n    dispatch(userActions.getAllLanguagesAction());\n  }, []);\n  useEffect(() => {\n    debugger;\n    console.log(props.languageListResponse);\n\n    if (props.languageListResponse.success) {\n      alert(\"Im called successfully !\");\n    }\n  }, [props.languageListResponse]); // controlled form functions\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(userActions.loginUserToDB(loginForm));\n    props.history.push('/');\n    console.log(loginForm);\n  };\n\n  const handleChange = e => setLoginForm({ ...loginForm,\n    [e.target.name]: e.target.value\n  }); // Destructuring keys from our local state to use in the form\n\n\n  const {\n    username,\n    password\n  } = loginForm; // Component code\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      value: username,\n      onChange: handleChange,\n      placeholder: \"Username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      onChange: handleChange,\n      placeholder: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginPage, \"1EUXpj7gPZ5attQ9PMWLsalexGs=\", false, function () {\n  return [useDispatch];\n});\n\n_c = LoginPage;\n\nfunction mapStateToProps(state) {\n  debugger;\n  return {\n    languageListResponse: state.languageListResponse\n  };\n}\n\nexport default connect(mapStateToProps)(LoginPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/home/anish/Documents/reduxDemo/rr-auth-frontend/src/Pages/login.js"],"names":["React","useState","useEffect","useDispatch","connect","userActions","LoginPage","props","dispatch","loginForm","setLoginForm","username","password","getAllLanguagesAction","console","log","languageListResponse","success","alert","handleSubmit","e","preventDefault","loginUserToDB","history","push","handleChange","target","name","value","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,OAAtB,QAAqC,aAArC;AACA,OAAOC,WAAP,MAAwB,iBAAxB;;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AAAA;;AACzB;AACA,QAAMC,QAAQ,GAAGL,WAAW,EAA5B,CAFyB,CAGzB;;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC;AACzCU,IAAAA,QAAQ,EAAE,EAD+B;AAEzCC,IAAAA,QAAQ,EAAE;AAF+B,GAAD,CAA1C;AAMAV,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,QAAQ,CAACH,WAAW,CAACQ,qBAAZ,EAAD,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;AAKAX,EAAAA,SAAS,CAAC,MAAM;AACd;AACEY,IAAAA,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACS,oBAAlB;;AACA,QAAGT,KAAK,CAACS,oBAAN,CAA2BC,OAA9B,EAAsC;AACpCC,MAAAA,KAAK,CAAC,0BAAD,CAAL;AACD;AACJ,GANQ,EAMN,CAACX,KAAK,CAACS,oBAAP,CANM,CAAT,CAfyB,CAwBzB;;AACA,QAAMG,YAAY,GAAGC,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACAb,IAAAA,QAAQ,CAACH,WAAW,CAACiB,aAAZ,CAA0Bb,SAA1B,CAAD,CAAR;AACAF,IAAAA,KAAK,CAACgB,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAYN,SAAZ;AACD,GALD;;AAOA,QAAMgB,YAAY,GAAGL,CAAC,IACpBV,YAAY,CAAC,EAAE,GAAGD,SAAL;AAAgB,KAACW,CAAC,CAACM,MAAF,CAASC,IAAV,GAAiBP,CAAC,CAACM,MAAF,CAASE;AAA1C,GAAD,CADd,CAhCyB,CAkCzB;;;AACA,QAAM;AAAEjB,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAyBH,SAA/B,CAnCyB,CAqCzB;;AACA,sBACE;AAAM,IAAA,QAAQ,EAAEU,YAAhB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,KAAK,EAAER,QAHT;AAIE,MAAA,QAAQ,EAAEc,YAJZ;AAKE,MAAA,WAAW,EAAC;AALd;AAAA;AAAA;AAAA;AAAA,YAFF,eAQI;AAAA;AAAA;AAAA;AAAA,YARJ,eASE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,KAAK,EAAEb,QAHT;AAIE,MAAA,QAAQ,EAAEa,YAJZ;AAKE,MAAA,WAAW,EAAC;AALd;AAAA;AAAA;AAAA;AAAA,YATF,eAeI;AAAA;AAAA;AAAA;AAAA,YAfJ,eAgBE;AAAO,MAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CA1DD;;GAAMnB,S;UAEaH,W;;;KAFbG,S;;AA4DN,SAASuB,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B;AACA,SAAO;AACLd,IAAAA,oBAAoB,EAAGc,KAAK,CAACd;AADxB,GAAP;AAGD;;AAED,eAAeZ,OAAO,CAACyB,eAAD,CAAP,CAAyBvB,SAAzB,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, connect } from 'react-redux';\nimport userActions from '../redux/action';\n\nconst LoginPage = props => {\n  // initializing dispatch\n  const dispatch = useDispatch();\n  // Setting up local state using the useState hook\n  const [loginForm, setLoginForm] = useState({\n    username: '',\n    password: ''\n  });\n\n\n  useEffect(() => {\n    dispatch(userActions.getAllLanguagesAction())\n  }, [])\n\n\n  useEffect(() => {\n    debugger\n      console.log(props.languageListResponse);\n      if(props.languageListResponse.success){\n        alert(\"Im called successfully !\");\n      }\n  }, [props.languageListResponse])\n\n\n  // controlled form functions\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(userActions.loginUserToDB(loginForm));\n    props.history.push('/');\n    console.log(loginForm);\n  };\n\n  const handleChange = e =>\n    setLoginForm({ ...loginForm, [e.target.name]: e.target.value });\n  // Destructuring keys from our local state to use in the form\n  const { username, password } = loginForm;\n\n  // Component code\n  return (\n    <form onSubmit={handleSubmit}>\n      <h1>Login Page</h1>\n      <input\n        type=\"text\"\n        name=\"username\"\n        value={username}\n        onChange={handleChange}\n        placeholder=\"Username\"\n      /><br/>\n      <input\n        type=\"password\"\n        name=\"password\"\n        value={password}\n        onChange={handleChange}\n        placeholder=\"Password\"\n      /><br/>\n      <input type=\"submit\"/>\n    </form>\n  );\n};\n\nfunction mapStateToProps(state) {\n  debugger\n  return {\n    languageListResponse : state.languageListResponse\n  }\n}\n\nexport default connect(mapStateToProps)(LoginPage);"]},"metadata":{},"sourceType":"module"}