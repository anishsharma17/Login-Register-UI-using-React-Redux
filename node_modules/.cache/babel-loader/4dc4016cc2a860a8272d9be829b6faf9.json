{"ast":null,"code":"var _jsxFileName = \"/home/anish/Documents/reduxDemo/rr-auth-frontend/src/Pages/login.js\",\n    _s = $RefreshSig$();\n\nimport './login.css';\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, connect } from 'react-redux';\nimport userActions from '../redux/action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginPage = props => {\n  _s();\n\n  // initializing dispatch\n  const dispatch = useDispatch(); // Setting up local state using the useState hook\n\n  const [loginForm, setLoginForm] = useState({\n    username: '',\n    password: ''\n  });\n  let [isLanguageApiCalled, setIsLanguageApiCalled] = useState(0);\n  useEffect(() => {\n    if (isLanguageApiCalled == 0 && props.languageListResponse == undefined) {\n      dispatch(userActions.getAllLanguagesAction());\n      setIsLanguageApiCalled(1);\n    }\n  }, []);\n  useEffect(() => {\n    if (props.languageListResponse && props.languageListResponse.success) {}\n  }, [props.languageListResponse]); // controlled form functions\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(userActions.loginUserToDB(loginForm));\n    props.history.push('/');\n    console.log(loginForm);\n  };\n\n  const handleChange = e => setLoginForm({ ...loginForm,\n    [e.target.name]: e.target.value\n  }); // Destructuring keys from our local state to use in the form\n\n\n  const {\n    username,\n    password\n  } = loginForm; // Component code\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"loginform\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://icons.iconarchive.com/icons/papirus-team/papirus-status/512/avatar-default-icon.png\",\n        style: {\n          \"width\": \"80px\",\n          \"height\": \"70px\",\n          \"margin-top\": \"20px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 175\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Login Here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        value: username,\n        placeholder: \"Username\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Enter your password\",\n        value: password,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginPage, \"d7rayD9DofYFqd5dS9Od/PZZ/9A=\", false, function () {\n  return [useDispatch];\n});\n\n_c = LoginPage;\n\nfunction mapStateToProps(state) {\n  return {\n    languageListResponse: state.languageListResponse\n  };\n}\n\nexport default connect(mapStateToProps)(LoginPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/home/anish/Documents/reduxDemo/rr-auth-frontend/src/Pages/login.js"],"names":["React","useState","useEffect","useDispatch","connect","userActions","LoginPage","props","dispatch","loginForm","setLoginForm","username","password","isLanguageApiCalled","setIsLanguageApiCalled","languageListResponse","undefined","getAllLanguagesAction","success","handleSubmit","e","preventDefault","loginUserToDB","history","push","console","log","handleChange","target","name","value","mapStateToProps","state"],"mappings":"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","sourcesContent":["import './login.css';\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, connect } from 'react-redux';\nimport userActions from '../redux/action';\n\nconst LoginPage = props => {\n  // initializing dispatch\n  const dispatch = useDispatch();\n  // Setting up local state using the useState hook\n  const [loginForm, setLoginForm] = useState({\n    username: '',\n    password: ''\n  });\n\n\n  let [isLanguageApiCalled, setIsLanguageApiCalled] = useState(0);\n\n\n  useEffect(() => {\n    if(isLanguageApiCalled == 0 && props.languageListResponse == undefined){\n      dispatch(userActions.getAllLanguagesAction())\n      setIsLanguageApiCalled(1);\n    }\n  }, [])\n\n\n  useEffect(() => {\n    \n      if(props.languageListResponse && props.languageListResponse.success){\n        \n      }\n  }, [props.languageListResponse])\n\n\n  // controlled form functions\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(userActions.loginUserToDB(loginForm));\n    props.history.push('/');\n    console.log(loginForm);\n  };\n\n  const handleChange = e =>\n    setLoginForm({ ...loginForm, [e.target.name]: e.target.value });\n  // Destructuring keys from our local state to use in the form\n  const { username, password } = loginForm;\n\n\n  // Component code\n  return (\n    <div className=\"loginPage\">\n      <div className=\"main-content\"></div>\n      <form id=\"loginform\" onSubmit={handleSubmit}>\n      <img src=\"https://icons.iconarchive.com/icons/papirus-team/papirus-status/512/avatar-default-icon.png\" style={{\"width\":\"80px\", \"height\":\"70px\", \"margin-top\":\"20px\"}} /><br/>\n      <h1> Login Here</h1>\n      <input\n        type=\"text\"\n        name=\"username\"\n        value={username}\n        placeholder=\"Username\"\n        onChange={handleChange}\n      /><br/>\n    \n      \n       <input\n        type=\"password\"\n        name=\"password\"\n        placeholder=\"Enter your password\"\n        value={password}\n        onChange={handleChange}\n        \n      /><br/>\n       <button \n       type=\"submit\">\n        Submit\n      </button>\n     \n    </form>\n       \n   </div>\n    \n    \n  );\n};\n\nfunction mapStateToProps(state) {\n  \n  return {\n    languageListResponse : state.languageListResponse\n  }\n}\n\nexport default connect(mapStateToProps)(LoginPage);"]},"metadata":{},"sourceType":"module"}