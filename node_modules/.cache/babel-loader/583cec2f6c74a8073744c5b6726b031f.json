{"ast":null,"code":"var _jsxFileName = \"/home/anish/Documents/reduxDemo/rr-auth-frontend/src/Pages/login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, connect } from 'react-redux';\nimport userActions from '../redux/action';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginPage = props => {\n  _s();\n\n  // initializing dispatch\n  const dispatch = useDispatch(); // Setting up local state using the useState hook\n\n  const [loginForm, setLoginForm] = useState({\n    username: '',\n    password: ''\n  });\n  let [isLanguageApiCalled, setIsLanguageApiCalled] = useState(0);\n  useEffect(() => {\n    if (isLanguageApiCalled == 0 && props.languageListResponse == undefined) {\n      dispatch(userActions.getAllLanguagesAction());\n      setIsLanguageApiCalled(1);\n    }\n  }, []);\n  useEffect(() => {\n    if (props.languageListResponse && props.languageListResponse.success) {\n      alert(\"Im called successfully !\");\n    }\n  }, [props.languageListResponse]); // controlled form functions\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(userActions.loginUserToDB(loginForm));\n    props.history.push('/');\n    console.log(loginForm);\n  };\n\n  const handleChange = e => setLoginForm({ ...loginForm,\n    [e.target.name]: e.target.value\n  }); // Destructuring keys from our local state to use in the form\n\n\n  const {\n    username,\n    password\n  } = loginForm; // Component code\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"outlined-basic\",\n      label: \"Username\",\n      variant: \"outlined\",\n      type: \"text\",\n      name: \"username\",\n      value: username,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"outlined-basic\",\n      label: \"Password\",\n      variant: \"outlined\",\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginPage, \"d7rayD9DofYFqd5dS9Od/PZZ/9A=\", false, function () {\n  return [useDispatch];\n});\n\n_c = LoginPage;\n\nfunction mapStateToProps(state) {\n  return {\n    languageListResponse: state.languageListResponse\n  };\n}\n\nexport default connect(mapStateToProps)(LoginPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/home/anish/Documents/reduxDemo/rr-auth-frontend/src/Pages/login.js"],"names":["React","useState","useEffect","useDispatch","connect","userActions","TextField","makeStyles","LoginPage","props","dispatch","loginForm","setLoginForm","username","password","isLanguageApiCalled","setIsLanguageApiCalled","languageListResponse","undefined","getAllLanguagesAction","success","alert","handleSubmit","e","preventDefault","loginUserToDB","history","push","console","log","handleChange","target","name","value","classes","root","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,OAAtB,QAAqC,aAArC;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AAAA;;AACzB;AACA,QAAMC,QAAQ,GAAGP,WAAW,EAA5B,CAFyB,CAGzB;;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC;AACzCY,IAAAA,QAAQ,EAAE,EAD+B;AAEzCC,IAAAA,QAAQ,EAAE;AAF+B,GAAD,CAA1C;AAMA,MAAI,CAACC,mBAAD,EAAsBC,sBAAtB,IAAgDf,QAAQ,CAAC,CAAD,CAA5D;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGa,mBAAmB,IAAI,CAAvB,IAA4BN,KAAK,CAACQ,oBAAN,IAA8BC,SAA7D,EAAuE;AACrER,MAAAA,QAAQ,CAACL,WAAW,CAACc,qBAAZ,EAAD,CAAR;AACAH,MAAAA,sBAAsB,CAAC,CAAD,CAAtB;AACD;AACF,GALQ,EAKN,EALM,CAAT;AAQAd,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAGO,KAAK,CAACQ,oBAAN,IAA8BR,KAAK,CAACQ,oBAAN,CAA2BG,OAA5D,EAAoE;AAClEC,MAAAA,KAAK,CAAC,0BAAD,CAAL;AACD;AACJ,GALQ,EAKN,CAACZ,KAAK,CAACQ,oBAAP,CALM,CAAT,CArByB,CA6BzB;;AACA,QAAMK,YAAY,GAAGC,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACAd,IAAAA,QAAQ,CAACL,WAAW,CAACoB,aAAZ,CAA0Bd,SAA1B,CAAD,CAAR;AACAF,IAAAA,KAAK,CAACiB,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYlB,SAAZ;AACD,GALD;;AAOA,QAAMmB,YAAY,GAAGP,CAAC,IACpBX,YAAY,CAAC,EAAE,GAAGD,SAAL;AAAgB,KAACY,CAAC,CAACQ,MAAF,CAASC,IAAV,GAAiBT,CAAC,CAACQ,MAAF,CAASE;AAA1C,GAAD,CADd,CArCyB,CAuCzB;;;AACA,QAAM;AAAEpB,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAyBH,SAA/B,CAxCyB,CA0CzB;;AACA,sBACE;AAAM,IAAA,SAAS,EAAEuB,OAAO,CAACC,IAAzB;AAA+B,IAAA,UAAU,MAAzC;AAA0C,IAAA,YAAY,EAAC,KAAvD;AAA6D,IAAA,QAAQ,EAAEb,YAAvE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAW,MAAA,EAAE,EAAC,gBAAd;AACE,MAAA,KAAK,EAAC,UADR;AAEE,MAAA,OAAO,EAAC,UAFV;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,IAAI,EAAC,UAJP;AAKE,MAAA,KAAK,EAAET,QALT;AAME,MAAA,QAAQ,EAAEiB;AANZ;AAAA;AAAA;AAAA;AAAA,YAFF,eASI;AAAA;AAAA;AAAA;AAAA,YATJ,eAUG,QAAC,SAAD;AAAW,MAAA,EAAE,EAAC,gBAAd;AACC,MAAA,KAAK,EAAC,UADP;AAEC,MAAA,OAAO,EAAC,UAFT;AAGC,MAAA,IAAI,EAAC,UAHN;AAIC,MAAA,IAAI,EAAC,UAJN;AAKC,MAAA,KAAK,EAAEhB,QALR;AAMC,MAAA,QAAQ,EAAEgB;AANX;AAAA;AAAA;AAAA;AAAA,YAVH,eAkBI;AAAA;AAAA;AAAA;AAAA,YAlBJ,eAmBE;AAAO,MAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,YAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CAlED;;GAAMtB,S;UAEaL,W;;;KAFbK,S;;AAoEN,SAAS4B,eAAT,CAAyBC,KAAzB,EAAgC;AAE9B,SAAO;AACLpB,IAAAA,oBAAoB,EAAGoB,KAAK,CAACpB;AADxB,GAAP;AAGD;;AAED,eAAeb,OAAO,CAACgC,eAAD,CAAP,CAAyB5B,SAAzB,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, connect } from 'react-redux';\nimport userActions from '../redux/action';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst LoginPage = props => {\n  // initializing dispatch\n  const dispatch = useDispatch();\n  // Setting up local state using the useState hook\n  const [loginForm, setLoginForm] = useState({\n    username: '',\n    password: ''\n  });\n\n\n  let [isLanguageApiCalled, setIsLanguageApiCalled] = useState(0);\n\n\n  useEffect(() => {\n    if(isLanguageApiCalled == 0 && props.languageListResponse == undefined){\n      dispatch(userActions.getAllLanguagesAction())\n      setIsLanguageApiCalled(1);\n    }\n  }, [])\n\n\n  useEffect(() => {\n    \n      if(props.languageListResponse && props.languageListResponse.success){\n        alert(\"Im called successfully !\");\n      }\n  }, [props.languageListResponse])\n\n\n  // controlled form functions\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(userActions.loginUserToDB(loginForm));\n    props.history.push('/');\n    console.log(loginForm);\n  };\n\n  const handleChange = e =>\n    setLoginForm({ ...loginForm, [e.target.name]: e.target.value });\n  // Destructuring keys from our local state to use in the form\n  const { username, password } = loginForm;\n\n  // Component code\n  return (\n    <form className={classes.root} noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n      <h1>Login Page</h1>\n      <TextField id=\"outlined-basic\"\n        label=\"Username\" \n        variant=\"outlined\" \n        type=\"text\"\n        name=\"username\"\n        value={username}\n        onChange={handleChange}\n      /><br/>\n       <TextField id=\"outlined-basic\" \n        label=\"Password\" \n        variant=\"outlined\"\n        type=\"password\"\n        name=\"password\"\n        value={password}\n        onChange={handleChange}\n        \n      /><br/>\n      <input type=\"submit\"/>\n    </form>\n  );\n};\n\nfunction mapStateToProps(state) {\n  \n  return {\n    languageListResponse : state.languageListResponse\n  }\n}\n\nexport default connect(mapStateToProps)(LoginPage);"]},"metadata":{},"sourceType":"module"}